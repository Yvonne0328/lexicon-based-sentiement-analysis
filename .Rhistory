xlim(0,202)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,202)
dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
# mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(during disaster)",
y = NULL)+
xlim(0, 100)
dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
# ungroup() %>%
# mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(during disaster)",
y = NULL)+
xlim(0, 100)
test <- dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup()
dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(during disaster)",
y = NULL)+
xlim(0, 100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
test <-
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq))
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(key = reorder(word, freq)) %>%
ggplot(aes(freq, key, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
test <- dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq))
ggplot(test, aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
library(twitteR)
library(rtweet)
library(dplyr)
library(tidytext)
library(textdata)
library(janeaustenr)
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(spData)
library(sf)
library(tidyverse)
library(maps)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
knitr::opts_chunk$set(cache=TRUE)
data <- read.csv("data/Twitter_disaster_1025_1115.csv")
point <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
data(world.cities)
seoul <- world.cities %>%
filter(name == 'Seoul')%>%
st_as_sf(coords = c("long", "lat"), crs = 4326)
seoul_buffer <- seoul %>%
st_buffer(dist = 120000)
data <- st_intersection(point, seoul_buffer)
data$text = gsub(" ?(f|ht)tp(s?)://(.*)[.][a-z]+", "", data$text)
data$text = gsub("[^\x01-\x7F]", "", data$text)
afinn = read.csv("data/afinn.csv")
nrc = read.csv("data/nrc.csv")
data(world)
asia <- world %>%
filter(subregion == "Eastern Asia") %>%
st_transform(crs = 4326)
ggplot()+
geom_sf(data = asia, fill = "grey60")+
geom_sf(data = seoul_buffer, fill = 'blue')+
geom_sf(data = seoul, fill = "red")
steps <- c("before", "during", "after", "after2", "after3", "after4", "after5")
for (i in steps){
data_temp <- data %>%
filter(timeline == i)
text_data <- data_temp$text
docs_data <- Corpus(VectorSource(text_data))
docs_data<- docs_data %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
docs_data <- tm_map(docs_data, content_transformer(tolower))
docs_data <- tm_map(docs_data, removeWords, stopwords("english"))
dtm <- TermDocumentMatrix(docs_data)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df_data <- data.frame(word = names(words),freq=words)
assign(paste0("df", i), df_data)
}
dfbefore <- dfbefore %>%
filter(word != "korea")
wordcloud(words = dfbefore$word,
freq = dfbefore$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfduring <- dfduring %>%
filter(word != "korea")
wordcloud(words = dfduring$word,
freq = dfduring$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfafter <- dfafter %>%
filter(word != "korea")
wordcloud(words = dfafter$word,
freq = dfafter$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfbefore %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(before disaster)",
y = NULL)+
xlim(0, 202)
dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(during disaster)",
y = NULL)+
xlim(0, 100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfbefore <- dfbefore %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfduring <- dfduring %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfafter <- dfafter %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfafter2 <- dfafter2 %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfafter3 <- dfafter3 %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfafter4 <- dfafter4 %>%
inner_join(afinn) %>%
mutate(score = freq*value)
dfafter5 <- inner_join(dfafter5, afinn, by = "word")%>%
mutate(score = freq*value)
SCORE  <- c(sum(dfbefore$score), sum(dfduring$score), sum(dfafter$score),sum(dfafter2$score),sum(dfafter3$score),
sum(dfafter4$score), sum(dfafter5$score))
timeframe <- c("-1", "0", "1", "2", "3", "4", "5")
names <- c("before", "during", "3D-after", "6D-after", "9D-after", "12D-after", "15D-after")
trend <- data.frame(names, timeframe, SCORE)
ggplot(trend, aes(x= factor(names,level = c("before", "during", "3D-after", "6D-after", "9D-after", "12D-after", "15D-after")), SCORE, group = 1))+
geom_line(arrow = arrow())+
geom_point()+
xlab("timeline")+
ylab("emotion score")+
ggtitle("social resilience")+
theme(plot.title = element_text(hjust = 0.5))
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
library(twitteR)
library(rtweet)
library(dplyr)
library(tidytext)
library(textdata)
library(janeaustenr)
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(spData)
library(sf)
library(tidyverse)
library(maps)
library(wordcloud)
library(RColorBrewer)
library(wordcloud2)
library(tm)
knitr::opts_chunk$set(cache=TRUE)
data <- read.csv("data/Twitter_disaster_1025_1115.csv")
point <- st_as_sf(data, coords = c("longitude", "latitude"), crs = 4326)
data(world.cities)
seoul <- world.cities %>%
filter(name == 'Seoul')%>%
st_as_sf(coords = c("long", "lat"), crs = 4326)
seoul_buffer <- seoul %>%
st_buffer(dist = 120000)
data <- st_intersection(point, seoul_buffer)
data$text = gsub(" ?(f|ht)tp(s?)://(.*)[.][a-z]+", "", data$text)
data$text = gsub("[^\x01-\x7F]", "", data$text)
afinn = read.csv("data/afinn.csv")
nrc = read.csv("data/nrc.csv")
data(world)
asia <- world %>%
filter(subregion == "Eastern Asia") %>%
st_transform(crs = 4326)
ggplot()+
geom_sf(data = asia, fill = "grey60")+
geom_sf(data = seoul_buffer, fill = 'blue')+
geom_sf(data = seoul, fill = "red")
steps <- c("before", "during", "after", "after2", "after3", "after4", "after5")
for (i in steps){
data_temp <- data %>%
filter(timeline == i)
text_data <- data_temp$text
docs_data <- Corpus(VectorSource(text_data))
docs_data<- docs_data %>%
tm_map(removeNumbers) %>%
tm_map(removePunctuation) %>%
tm_map(stripWhitespace)
docs_data <- tm_map(docs_data, content_transformer(tolower))
docs_data <- tm_map(docs_data, removeWords, stopwords("english"))
dtm <- TermDocumentMatrix(docs_data)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix),decreasing=TRUE)
df_data <- data.frame(word = names(words),freq=words)
assign(paste0("df", i), df_data)
}
dfbefore <- dfbefore %>%
filter(word != "korea")
wordcloud(words = dfbefore$word,
freq = dfbefore$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfduring <- dfduring %>%
filter(word != "korea")
wordcloud(words = dfduring$word,
freq = dfduring$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfafter <- dfafter %>%
filter(word != "korea")
wordcloud(words = dfafter$word,
freq = dfafter$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
dfbefore %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(before disaster)",
y = NULL)+
xlim(0, 202)
dfduring %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(during disaster)",
y = NULL)+
xlim(0, 100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
test <- dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq))
View(test)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
coord_flip()+
geom_bar(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_bar(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_bar( ) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_bar(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(x =freq,y= word, fill = sentiment)) +
geom_bar(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot(aes(freq, word, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
dfafter %>%
inner_join(nrc) %>%
group_by(sentiment) %>%
arrange(desc(freq)) %>%
slice(1:10) %>%
ungroup() %>%
mutate(word = reorder(word, freq)) %>%
ggplot()+ # data
geom_bar(aes(freq, word, fill = sentiment))+
coord_flip()+
# ggplot(aes(freq, word, fill = sentiment)) +
# geom_col(show.legend = FALSE) +
facet_wrap(~sentiment, scales = "free_y") +
labs(x = "Contribution to sentiment(after disaster)",
y = NULL)+
xlim(0,100)
